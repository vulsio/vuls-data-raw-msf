{
  "name": "EasyFTP Server CWD Command Stack Buffer Overflow",
  "fullname": "exploit/windows/ftp/easyftp_cwd_fixret",
  "rank": 500,
  "disclosure_date": "2010-02-16",
  "type": "exploit",
  "author": [
    "Paul Makowski <my.hndl@gmail.com>",
    "jduck <jduck@metasploit.com>"
  ],
  "description": "This module exploits a stack-based buffer overflow in EasyFTP Server 1.7.0.11\n        and earlier. EasyFTP fails to check input size when parsing 'CWD' commands, which\n        leads to a stack based buffer overflow.  EasyFTP allows anonymous access by\n        default; valid credentials are typically unnecessary to exploit this vulnerability.\n\n        After version 1.7.0.12, this package was renamed \"UplusFtp\".\n\n        This exploit utilizes a small piece of code that I\\'ve referred to as 'fixRet'.\n        This code allows us to inject of payload of ~500 bytes into a 264 byte buffer by\n        'fixing' the return address post-exploitation.  See references for more information.",
  "references": [
    "OSVDB-62134",
    "BID-38262",
    "URL-http://paulmakowski.wordpress.com/2010/02/28/increasing-payload-size-w-return-address-overwrite/",
    "URL-http://paulmakowski.wordpress.com/2010/04/19/metasploit-plugin-for-easyftp-server-exploit",
    "URL-https://seclists.org/bugtraq/2010/Feb/202"
  ],
  "platform": "Windows",
  "rport": 21,
  "autofilter_ports": [
    21,
    2121
  ],
  "autofilter_services": [
    "ftp"
  ],
  "targets": [
    "Windows Universal - v1.7.0.2",
    "Windows Universal - v1.7.0.3",
    "Windows Universal - v1.7.0.4",
    "Windows Universal - v1.7.0.5",
    "Windows Universal - v1.7.0.6",
    "Windows Universal - v1.7.0.7",
    "Windows Universal - v1.7.0.8",
    "Windows Universal - v1.7.0.9",
    "Windows Universal - v1.7.0.10",
    "Windows Universal - v1.7.0.11"
  ],
  "mod_time": "2020-10-02 17:38:06 +0000",
  "path": "/modules/exploits/windows/ftp/easyftp_cwd_fixret.rb",
  "is_install_path": true,
  "ref_name": "windows/ftp/easyftp_cwd_fixret",
  "check": true
}
