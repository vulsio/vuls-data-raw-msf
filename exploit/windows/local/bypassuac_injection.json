{
  "name": "Windows Escalate UAC Protection Bypass (In Memory Injection)",
  "fullname": "exploit/windows/local/bypassuac_injection",
  "rank": 600,
  "disclosure_date": "2010-12-31",
  "type": "exploit",
  "author": [
    "David Kennedy \"ReL1K\" <kennedyd013@gmail.com>",
    "mitnick",
    "mubix <mubix@hak5.org>",
    "Ben Campbell <eat_meatballs@hotmail.co.uk>",
    "Lesage",
    "OJ Reeves"
  ],
  "description": "This module will bypass Windows UAC by utilizing the trusted publisher\n          certificate through process injection. It will spawn a second shell that\n          has the UAC flag turned off. This module uses the Reflective DLL Injection\n          technique to drop only the DLL payload binary instead of three separate\n          binaries in the standard technique. However, it requires the correct\n          architecture to be selected, (use x64 for SYSWOW64 systems also).\n          If specifying EXE::Custom your DLL should call ExitProcess() after starting\n          your payload in a separate process.",
  "references": [
    "URL-http://www.trustedsec.com/december-2010/bypass-windows-uac/",
    "URL-http://www.pretentiousname.com/misc/W7E_Source/win7_uac_poc_details.html"
  ],
  "platform": "Windows",
  "targets": [
    "Windows x86",
    "Windows x64"
  ],
  "mod_time": "2023-05-25 12:45:30 +0000",
  "path": "/modules/exploits/windows/local/bypassuac_injection.rb",
  "is_install_path": true,
  "ref_name": "windows/local/bypassuac_injection",
  "session_types": [
    "meterpreter"
  ],
  "needs_cleanup": true
}
