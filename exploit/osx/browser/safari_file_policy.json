{
  "name": "Apple Safari file:// Arbitrary Code Execution",
  "fullname": "exploit/osx/browser/safari_file_policy",
  "rank": 300,
  "disclosure_date": "2011-10-12",
  "type": "exploit",
  "author": [
    "Aaron Sigel",
    "sinn3r <sinn3r@metasploit.com>"
  ],
  "description": "This module exploits a vulnerability found in Apple Safari on OS X platform.\n        A policy issue in the handling of file:// URLs may allow arbitrary remote code\n        execution under the context of the user.\n\n          In order to trigger arbitrary remote code execution, the best way seems to\n        be opening a share on the victim machine first (this can be SMB/WebDav/FTP, or\n        a file format that OS X might automount), and then execute it in /Volumes/[share].\n        If there's some kind of bug that leaks the victim machine's current username,\n        then it's also possible to execute the payload in /Users/[username]/Downloads/,\n        or else bruteforce your way to getting that information.\n\n          Please note that non-java payloads (*.sh extension) might get launched by\n        Xcode instead of executing it, in that case please try the Java ones instead.",
  "references": [
    "CVE-2011-3230",
    "OSVDB-76389",
    "URL-http://vttynotes.blogspot.com/2011/10/cve-2011-3230-launch-any-file-path-from.html#comments",
    "URL-http://support.apple.com/kb/HT5000"
  ],
  "platform": "Java,OSX,Unix",
  "arch": "cmd, java",
  "targets": [
    "Safari 5.1 on OS X",
    "Safari 5.1 on OS X with Java"
  ],
  "mod_time": "2022-03-10 09:07:11 +0000",
  "path": "/modules/exploits/osx/browser/safari_file_policy.rb",
  "is_install_path": true,
  "ref_name": "osx/browser/safari_file_policy"
}
