{
	"name": "Safari in Operator Side Effect Exploit",
	"fullname": "exploit/osx/browser/safari_in_operator_side_effect",
	"disclosure_date": "2020-03-18",
	"type": "exploit",
	"author": [
		"Yonghwi Jin <jinmoteam@gmail.com>",
		"Jungwon Lim <setuid0@protonmail.com>",
		"Insu Yun <insu@gatech.edu>",
		"Taesoo Kim <taesoo@gatech.edu>",
		"timwr"
	],
	"description": "This module exploits an incorrect side-effect modeling of the 'in' operator.\n          The DFG compiler assumes that the 'in' operator is side-effect free, however\n          the <embed> element with the PDF plugin provides a callback that can trigger\n          side-effects leading to type confusion (CVE-2020-9850).\n          The type confusion can be used as addrof and fakeobj primitives that then\n          lead to arbitrary read/write of memory. These primitives allow us to write\n          shellcode into a JIT region (RWX memory) containing the next stage of the\n          exploit.\n          The next stage uses CVE-2020-9856 to exploit a heap overflow in CVM Server,\n          and extracts a macOS application containing our payload into /var/db/CVMS.\n          The payload can then be opened with CVE-2020-9801, executing the payload\n          as a user but without sandbox restrictions.",
	"references": [
		"CVE-2020-9801",
		"CVE-2020-9850",
		"CVE-2020-9856",
		"URL-https://github.com/sslab-gatech/pwn2own2020"
	],
	"targets": [
		"Mac OS X x64 (Native Payload)",
		"Python payload",
		"Command payload"
	],
	"mod_time": "2022-02-16 11:48:55 +0000",
	"path": "/modules/exploits/osx/browser/safari_in_operator_side_effect.rb",
	"is_install_path": true,
	"ref_name": "osx/browser/safari_in_operator_side_effect",
	"notes": {
		"Reliability": [
			"repeatable-session"
		],
		"SideEffects": [
			"ioc-in-logs"
		],
		"Stability": [
			"crash-safe"
		]
	}
}
