{
  "name": "WP Database Backup RCE",
  "fullname": "exploit/multi/http/wp_db_backup_rce",
  "rank": 600,
  "disclosure_date": "2019-04-24",
  "type": "exploit",
  "author": [
    "Mikey Veenstra / Wordfence",
    "Shelby Pace"
  ],
  "description": "There exists a command injection vulnerability in the Wordpress plugin\n        `wp-database-backup` for versions < 5.2.\n\n        For the backup functionality, the plugin generates a `mysqldump` command\n        to execute. The user can choose specific tables to exclude from the backup\n        by setting the `wp_db_exclude_table` parameter in a POST request to the\n        `wp-database-backup` page. The names of the excluded tables are included in\n        the `mysqldump` command unsanitized. Arbitrary commands injected through the\n        `wp_db_exclude_table` parameter are executed each time the functionality\n        for creating a new database backup are run.\n\n        Authentication is required to successfully exploit this vulnerability.",
  "references": [
    "URL-https://www.wordfence.com/blog/2019/05/os-command-injection-vulnerability-patched-in-wp-database-backup-plugin/"
  ],
  "platform": "Linux,Windows",
  "arch": "x86, x64",
  "rport": 80,
  "autofilter_ports": [
    80,
    8080,
    443,
    8000,
    8888,
    8880,
    8008,
    3000,
    8443
  ],
  "autofilter_services": [
    "http",
    "https"
  ],
  "targets": [
    "Windows",
    "Linux"
  ],
  "mod_time": "2021-02-17 12:33:59 +0000",
  "path": "/modules/exploits/multi/http/wp_db_backup_rce.rb",
  "is_install_path": true,
  "ref_name": "multi/http/wp_db_backup_rce",
  "check": true,
  "post_auth": true
}
