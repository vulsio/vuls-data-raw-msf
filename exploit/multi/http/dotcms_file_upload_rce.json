{
  "name": "DotCMS RCE via Arbitrary File Upload.",
  "fullname": "exploit/multi/http/dotcms_file_upload_rce",
  "rank": 600,
  "disclosure_date": "2022-05-03",
  "type": "exploit",
  "author": [
    "Shubham Shah",
    "Hussein Daher",
    "jheysel-r7"
  ],
  "description": "When files are uploaded into dotCMS via the content API, but before they become content, dotCMS writes the\n          file down in a temp directory.  In the case of this vulnerability, dotCMS does not sanitize the filename\n          passed in via the multipart request header and thus does not sanitize the temp file's name.  This allows a\n          specially crafted request to POST files to dotCMS via the ContentResource (POST /api/content)  that get\n          written outside of the dotCMS temp directory.  In the case of this exploit, an attacker can upload a special\n          .jsp file to the webapp/ROOT directory of dotCMS which can allow for remote code execution.",
  "references": [
    "CVE-2022-26352",
    "URL-https://blog.assetnote.io/2022/05/03/hacking-a-bank-using-dotcms-rce/"
  ],
  "platform": "Linux,Windows",
  "rport": 8443,
  "autofilter_ports": [
    80,
    8080,
    443,
    8000,
    8888,
    8880,
    8008,
    3000,
    8443
  ],
  "autofilter_services": [
    "http",
    "https"
  ],
  "targets": [
    "Java Linux",
    "Java Windows"
  ],
  "mod_time": "2022-06-01 10:54:02 +0000",
  "path": "/modules/exploits/multi/http/dotcms_file_upload_rce.rb",
  "is_install_path": true,
  "ref_name": "multi/http/dotcms_file_upload_rce",
  "check": true,
  "notes": {
    "Reliability": [
      "repeatable-session"
    ],
    "SideEffects": [
      "artifacts-on-disk",
      "ioc-in-logs"
    ],
    "Stability": [
      "crash-safe"
    ]
  },
  "needs_cleanup": true
}
