{
	"name": "Google Chrome versions before 87.0.4280.88 integer overflow during SimplfiedLowering phase",
	"fullname": "exploit/multi/browser/chrome_simplifiedlowering_overflow",
	"disclosure_date": "2020-11-19",
	"type": "exploit",
	"author": [
		"Rajvardhan Agarwal (r4j)"
	],
	"description": "This module exploits an issue in Google Chrome versions before 87.0.4280.88 (64 bit).\n          The exploit makes use of an integer overflow in the SimplifiedLowering phase in turbofan.\n          It is used along with a type hardening bypass using ArrayPrototypeShift to create a JSArray with a length of -1.\n          This is abused to gain arbitrary read/write into the isolate region.\n          Then an ArrayBuffer can be used to achieve absolute arbitrary read/write.\n          The exploit then uses WebAssembly in order to allocate a region of RWX memory, which is then replaced with the payload shellcode.\n          The payload is executed within the sandboxed renderer process, the browser must be run with the --no-sandbox option for the payload to work correctly.",
	"references": [
		"CVE-2020-16040",
		"URL-https://chromium-review.googlesource.com/c/v8/v8/+/2557498",
		"URL-https://github.com/r4j0x00/exploits/tree/master/CVE-2020-16040",
		"URL-https://faraz.faith/2021-01-07-cve-2020-16040-analysis/",
		"URL-https://bugs.chromium.org/p/chromium/issues/detail?id=1150649"
	],
	"arch": "x64",
	"targets": [
		"Linux - Google Chrome 87.0.4280.66 (64 bit)",
		"Windows 10 - Google Chrome 87.0.4280.66 (64 bit)",
		"macOS - Google Chrome 87.0.4280.66 (64 bit)"
	],
	"mod_time": "2023-02-10 18:04:31 +0000",
	"path": "/modules/exploits/multi/browser/chrome_simplifiedlowering_overflow.rb",
	"is_install_path": true,
	"ref_name": "multi/browser/chrome_simplifiedlowering_overflow",
	"notes": {
		"Reliability": [
			"repeatable-session"
		],
		"SideEffects": [
			"ioc-in-logs"
		],
		"Stability": [
			"crash-service-restarts"
		]
	}
}
