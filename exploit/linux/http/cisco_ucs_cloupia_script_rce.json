{
	"name": "Cisco UCS Director Cloupia Script RCE",
	"fullname": "exploit/linux/http/cisco_ucs_cloupia_script_rce",
	"rank": 600,
	"disclosure_date": "2020-04-15",
	"type": "exploit",
	"author": [
		"mr_me",
		"wvu <wvu@metasploit.com>"
	],
	"description": "This module exploits an authentication bypass and directory traversals\n          in Cisco UCS Director < 6.7.4.0 to leak the administrator's REST API\n          key and execute a Cloupia script containing an arbitrary root command.\n\n          Note that the primary functionality of this module is to leverage the\n          Cloupia script interpreter to execute code. This functionality is part\n          of the application's intended operation and considered a \"foreverday.\"\n          The authentication bypass and directory traversals only get us there.\n\n          If you already have an API key, you may set it in the API_KEY option.\n          The LEAK_FILE option may be set if you wish to leak the API key from a\n          different absolute path, but normally this isn't advisable.\n\n          Tested on Cisco's VMware distribution of 6.7.3.0.",
	"references": [
		"CVE-2020-3243",
		"CVE-2020-3250",
		"ZDI-20-540",
		"ZDI-20-538",
		"URL-https://srcincite.io/blog/2020/04/17/strike-three-symlinking-your-way-to-unauthenticated-access-against-cisco-ucs-director.html",
		"URL-https://srcincite.io/pocs/src-2020-0014.py.txt"
	],
	"platform": "Linux,Unix",
	"arch": "cmd, x86, x64",
	"rport": 443,
	"autofilter_ports": [
		80,
		8080,
		443,
		8000,
		8888,
		8880,
		8008,
		3000,
		8443
	],
	"autofilter_services": [
		"http",
		"https"
	],
	"targets": [
		"Unix Command",
		"Linux Dropper"
	],
	"mod_time": "2021-02-16 13:56:50 +0000",
	"path": "/modules/exploits/linux/http/cisco_ucs_cloupia_script_rce.rb",
	"is_install_path": true,
	"ref_name": "linux/http/cisco_ucs_cloupia_script_rce",
	"check": true,
	"notes": {
		"Reliability": [
			"repeatable-session"
		],
		"SideEffects": [
			"ioc-in-logs",
			"artifacts-on-disk"
		],
		"Stability": [
			"crash-safe"
		]
	}
}
